function strlen(str: *char) -> int {
	var counter: int = 0;
	while *str != 0 {
		str = str + 1;
		counter = counter + 1;
	}

	return counter;
}

function strneq(str1: *char, str2: *char, length: int) -> bool {
    var i: int = 0;
    while i < length {
        if *str1 != *str2 {
            return false;
        }
    
        str1 = str1 + 1;
        str2 = str2 + 1;
        i = i + 1;
    }

    return true;
}

function streq(str1: *char, str2: *char) -> bool {
    var length1: int = strlen(str1);
    var length2: int = strlen(str2);
    if length1 != length2 {
        return false;
    }

    return strneq(str1, str2, length1);
}

function starts_with(str1: *char, str2: *char) -> bool {
    var str1len: int = strlen(str1);
    var str2len: int = strlen(str2);
    if str1len < str2len {
        return false;
    }

    var i: int = 0;
    while i < str2len {
        if *str1 == *str2 {
            i = i + 1;
            str1 = str1 + 1;
            str2 = str2 + 1;
        } else {
            return false;
        }
    }

    return true;
}

function find_first_of(str1: *char, str2: *char) -> int {
    var str1len: int = strlen(str1);
    var str2len: int = strlen(str2);
    if str1len < str2len {
        return -1;
    }

    var i: int = 0;
    while i < str1len {
        if starts_with(str1, str2) {
            return i;
        }

        str1 = str1 + 1;
        i = i + 1;
    }

    return -1;
}